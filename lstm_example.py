import numpy as np
from lstm_network.LSTMNetwork import LSTMNetwork


input_data = "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"\
    + "123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123123"
hidden_size = 100
sequence_length = 25  # 'length' of memory
learning_rate = 1e-1
char_set = set(input_data)

lstm = LSTMNetwork()

lstm.populate(char_set, layer_sizes=[hidden_size])

lstm.train(input_data, 15)

#print("result: " + str(lstm.feedforward(np.array([1]))))
#print("result: " + str(lstm.feedforward(np.array([1]))))
